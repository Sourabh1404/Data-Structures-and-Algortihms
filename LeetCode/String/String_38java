class Solution {
public:
    char findKthBit(int n, int k) {
        if(n == 1){
            //stop condition
            return '0';
        }
        /*
        n = 1, len = 1
        n = 2, len = 1*2+1 = 3
        n = 3, len = 3*2+1 = 7
        n = 4, len = 7*2+1 = 15
        */
        int len = (1<<n) - 1;
        
        //note that k is 1-based!
        if(k == (len>>1)+1){
            return '1';
        }else if(k < (len>>1)+1){
            //left part
            return findKthBit(n-1, k);
        }else{
            //right part
            /*
            kth bit in the original string
            becomes (l-k+1)th bit in the reverted string
            */
            //and we also need to invert it
            return findKthBit(n-1, len-k+1) == '0' ? '1' : '0';
        }
    }
};
